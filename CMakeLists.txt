cmake_minimum_required(VERSION 3.10)
project(insecure-simple-exploit-boilerplate)

# 0. Study the target
add_executable(target target.cpp)
target_compile_options(target PRIVATE -fno-stack-protector)
set_target_properties(target PROPERTIES LINK_FLAGS "-z execstack")

# 1. Write the shell code
add_executable(shellcode shellcode.c)
target_compile_options(shellcode PRIVATE -Os)
set_target_properties(shellcode PROPERTIES LINK_FLAGS "-static")
target_compile_options(shellcode PRIVATE -fno-stack-protector)

# 2. Write the inline assembly
add_executable(shellcode_asm shellcode_asm.c)

# 3. Put the bytes in a char buffer
add_executable(shellcode_test shellcode_test.c)
target_compile_options(shellcode_test PRIVATE -fno-stack-protector)
set_target_properties(shellcode_test PROPERTIES LINK_FLAGS "-z execstack")

# 4. Put the shell code in the exploit
add_executable(exploit exploit.c)

# PS - possible C code for a reverse shell
add_executable(reverse_shellcode reverse_shellcode.c)
